{"version":3,"sources":["components/Form/Form.module.css","components/Section/Section.module.css","components/Contacts/ContactsItem.module.css","components/Contacts/Contacts.module.css","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/ContactsItem.jsx","components/Contacts/Contacts.jsx","App.js","hooks/useLocalStorage.jsx","index.js"],"names":["module","exports","Section","text","className","children","s","Section__heading","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","preventDefault","htmlFor","Form__item","Form__input","id","onChange","type","pattern","title","required","Form__button","Filter","ContactsItem","deleteFunc","ContactsItem__text","ContactsItem__button","onClick","Contacts","contacts","onDeleteContact","Contacts__list","length","Contacts__message","map","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","nanoid","findMap","find","alert","prevContacts","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da3e89d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__3oAo1\",\"Form__item\":\"Form_Form__item__3SzXT\",\"Form__input\":\"Form_Form__input__APgVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section__heading\":\"Section_Section__heading__oGKG3\",\"Section\":\"Section_Section__1gFlL\",\"Phonebook\":\"Section_Phonebook__Z8LUD Section_Section__1gFlL\",\"Contacts\":\"Section_Contacts__3blOx Section_Section__1gFlL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsItem\":\"ContactsItem_ContactsItem__31V06\",\"ContactsItem__button\":\"ContactsItem_ContactsItem__button__tA0ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__list\":\"Contacts_Contacts__list__2d4dM\",\"Contacts__message\":\"Contacts_Contacts__message__2lrvD\"};","import React from 'react';\r\nimport s from 'components/Section/Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ text, className, children }) {\r\n  return (\r\n    <section className={(s.Section, s[className])}>\r\n      <h2 className={s.Section__heading}>{text}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  text: PropTypes.string,\r\n  className: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport { Section };\r\n","import React, { useState } from 'react';\r\nimport { Section } from 'components/Section/Section';\r\nimport s from 'components/Form/Form.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Section className=\"Phonebook\" text=\"Phonebook\">\r\n      <form onSubmit={handleSubmit} className={s.Form}>\r\n        <label htmlFor=\"input-name\" className={s.Form__item}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.Form__input}\r\n          id=\"input-name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label htmlFor=\"input-tel\" className={s.Form__item}>\r\n          Phone number\r\n        </label>\r\n        <input\r\n          onChange={handleChange}\r\n          className={s.Form__input}\r\n          id=\"input-tel\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className={s.Form__button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </Section>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  className: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport { Form };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label htmlFor=\"search\">\r\n      Find contacts by name\r\n      <input id=\"search\" type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport { Filter };\r\n","import React from 'react';\r\nimport s from 'components/Contacts/ContactsItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactsItem({ id, name, number, deleteFunc }) {\r\n  return (\r\n    <li key={id} className={s.ContactsItem}>\r\n      <span className={s.ContactsItem__text}>\r\n        {name}: {number}\r\n      </span>\r\n      <button\r\n        type=\"button\"\r\n        className={s.ContactsItem__button}\r\n        onClick={() => deleteFunc(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string,\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  name: PropTypes.string,\r\n  deleteFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ContactsItem };\r\n","import React from 'react';\r\nimport { Section } from 'components/Section/Section';\r\nimport { ContactsItem } from './ContactsItem';\r\nimport s from 'components/Contacts/Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Contacts({ contacts, onDeleteContact }) {\r\n  return (\r\n    <Section className={s.Contacts} text=\"Contacts\">\r\n      <ul className={s.Contacts__list}>\r\n        {contacts.length === 0 ? (\r\n          <h3 className={s.Contacts__message}>Nothing is here</h3>\r\n        ) : (\r\n          contacts.map(({ name, id, number }) => (\r\n            <ContactsItem\r\n              deleteFunc={() => onDeleteContact(id)}\r\n              name={name}\r\n              key={id}\r\n              number={number}\r\n            />\r\n          ))\r\n        )}\r\n      </ul>\r\n    </Section>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\nexport { Contacts };\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Form } from 'components/Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { nanoid } from 'nanoid';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  });\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    const findMap = contacts.find(contact => contact.name === name);\n\n    findMap\n      ? alert(`${name} is already in contacts!`)\n      : setContacts(prevContacts => [...prevContacts, contact]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <Form onSubmit={addContact} />\n      <Filter value={filter} onChange={changeFilter} />\n      <Contacts contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}